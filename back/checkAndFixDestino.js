import sequelize from './src/config/database.js';

async function checkAndFix() {
  try {
    console.log('üîÑ Conectando a la base de datos...');
    await sequelize.authenticate();
    console.log('‚úÖ Conexi√≥n establecida\n');

    // Verificar si existe la tabla destinos
    console.log('üìä Verificando tabla destinos...');
    const [tables] = await sequelize.query(`
      SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES
      WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'destinos'
    `);

    if (tables.length > 0) {
      console.log('‚úÖ Tabla destinos existe');

      // Ver cu√°ntos registros hay
      const [count] = await sequelize.query('SELECT COUNT(*) as total FROM destinos');
      console.log(`   - Registros actuales: ${count[0].total}`);
    } else {
      console.log('‚ùå Tabla destinos NO existe - creando...');
      await sequelize.query(`
        CREATE TABLE destinos (
          id_destino INTEGER auto_increment PRIMARY KEY,
          nombre VARCHAR(255) NOT NULL UNIQUE,
          provincia VARCHAR(100),
          region VARCHAR(100),
          descripcion TEXT,
          fecha_creacion DATETIME DEFAULT CURRENT_TIMESTAMP,
          fecha_actualizacion DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
        ) ENGINE=InnoDB
      `);
      console.log('‚úÖ Tabla destinos creada');
    }

    // Verificar si existe la columna id_destino en viajes
    console.log('\nüìä Verificando columna id_destino en viajes...');
    const [columns] = await sequelize.query(`
      SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
      WHERE TABLE_SCHEMA = DATABASE()
      AND TABLE_NAME = 'viajes'
      AND COLUMN_NAME = 'id_destino'
    `);

    if (columns.length > 0) {
      console.log('‚úÖ Columna id_destino YA EXISTE en viajes');
    } else {
      console.log('‚ùå Columna id_destino NO existe - agregando...');
      await sequelize.query(`
        ALTER TABLE viajes
        ADD COLUMN id_destino INTEGER NULL,
        ADD CONSTRAINT fk_viajes_destino
        FOREIGN KEY (id_destino) REFERENCES destinos(id_destino)
        ON UPDATE CASCADE ON DELETE SET NULL
      `);
      console.log('‚úÖ Columna id_destino agregada a viajes');

      // Agregar √≠ndice
      await sequelize.query(`
        ALTER TABLE viajes ADD INDEX idx_viajes_destino (id_destino)
      `);
      console.log('‚úÖ √çndice agregado');
    }

    // Insertar destinos de ejemplo si la tabla est√° vac√≠a
    const [destinos] = await sequelize.query('SELECT COUNT(*) as total FROM destinos');
    if (destinos[0].total === 0) {
      console.log('\nüìù Insertando destinos de ejemplo...');
      await sequelize.query(`
        INSERT INTO destinos (nombre, provincia, region, descripcion, fecha_creacion, fecha_actualizacion) VALUES
        ('Cerro Aconcagua', 'Mendoza', 'Cuyo', 'El pico m√°s alto de Am√©rica', NOW(), NOW()),
        ('Cerro Fitz Roy', 'Santa Cruz', 'Patagonia', 'Ic√≥nica monta√±a patag√≥nica', NOW(), NOW()),
        ('Cerro Torre', 'Santa Cruz', 'Patagonia', 'Una de las monta√±as m√°s dif√≠ciles del mundo', NOW(), NOW()),
        ('Glaciar Perito Moreno', 'Santa Cruz', 'Patagonia', 'Uno de los glaciares m√°s famosos del mundo', NOW(), NOW()),
        ('Cerro Champaqu√≠', 'C√≥rdoba', 'Sierras Pampeanas', 'Punto m√°s alto de C√≥rdoba', NOW(), NOW()),
        ('Quebrada de Humahuaca', 'Jujuy', 'NOA', 'Patrimonio de la Humanidad UNESCO', NOW(), NOW()),
        ('Volc√°n Lan√≠n', 'Neuqu√©n', 'Patagonia Norte', 'Volc√°n emblem√°tico de la Patagonia', NOW(), NOW()),
        ('Laguna de los Tres', 'Santa Cruz', 'Patagonia', 'Trekking cl√°sico en El Chalt√©n', NOW(), NOW()),
        ('Cerro Catedral', 'R√≠o Negro', 'Patagonia', 'Centro de esqu√≠ y trekking en Bariloche', NOW(), NOW()),
        ('Valle de la Luna', 'San Juan', 'Cuyo', 'Formaciones rocosas √∫nicas', NOW(), NOW())
      `);
      console.log('‚úÖ 10 destinos insertados');
    }

    console.log('\n‚úÖ Base de datos configurada correctamente!');
    console.log('\nüìä Estado final:');
    const [finalDestinos] = await sequelize.query('SELECT COUNT(*) as total FROM destinos');
    console.log(`   - Destinos: ${finalDestinos[0].total}`);

    await sequelize.close();
    process.exit(0);
  } catch (error) {
    console.error('\n‚ùå Error:', error.message);
    await sequelize.close();
    process.exit(1);
  }
}

checkAndFix();
